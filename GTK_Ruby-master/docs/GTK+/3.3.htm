<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html><head>


  <title>Hello World in Ruby-GNOME2</title>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <meta name="GENERATOR" content="Quanta Plus">
  <link rel="stylesheet" type="text/css" href="site-style.css">
</head><body>
<h1>3.3. Events</h1>

<p>In addition to the signal mechanism described before, there is a set of <i>events</i> that reflect the X event mechanism.
Callbacks may also be attached to these events. These events are:</p>
<ul>
	<li>event</li>
	<li>button_press_event</li>
	<li>button_release_event</li>
	<li>scroll_event</li>
	<li>motion_notify_event</li>
	<li>delete_event</li>
	<li>destroy_event</li>
	<li>expose_event</li>
	<li>key_press_event</li>
	<li>key_release_event</li>
	<li>enter_notify_event</li>
	<li>leave_notify_event</li>
	<li>configure_event</li>
	<li>focus_in_event</li>
	<li>focus_out_event</li>
	<li>map_event</li>
	<li>unmap_event</li>
	<li>property_notify_event</li>
	<li>selection_clear_event</li>
	<li>selection_request_event</li>
	<li>selection_notify_event</li>
	<li>proximity_in_event</li>
	<li>proximity_out_event</li>
	<li>visibility_notify_event</li>
	<li>client_event</li>
	<li>no_expose_event</li>
	<li>window_state_event</li>
</ul>

<p>In order to connect a callback method to one is these events you use the GLib::Instantiatable#signal_connect, as
described previously, using one of the above event names as the <i>signal_to_catch</i> parameter. The callback method 
for events has a slightly different form than that for signals:</p>

<pre>GLib::Instantiatable#signal_connect ( "signal_to_catch" ) { |widget, event| callback_method }</pre>

<p>Below are the possible Gdk::Event types:</p>
<ul>
	<li>Gdk::Event::NOTHING</li>
  	<li>Gdk::Event::DELETE</li>
  	<li>Gdk::Event::DESTROY</li>
  	<li>Gdk::Event::EXPOSE</li>
  	<li>Gdk::Event::MOTION_NOTIFY</li>
  	<li>Gdk::Event::BUTTON_PRESS</li>
  	<li>Gdk::Event::2BUTTON_PRESS</li>
  	<li>Gdk::Event::3BUTTON_PRESS</li>
  	<li>Gdk::Event::BUTTON_RELEASE</li>
  	<li>Gdk::Event::KEY_PRESS</li>
  	<li>Gdk::Event::KEY_RELEASE</li>
  	<li>Gdk::Event::ENTER_NOTIFY</li>
  	<li>Gdk::Event::LEAVE_NOTIFY</li>
  	<li>Gdk::Event::FOCUS_CHANGE</li>
  	<li>Gdk::Event::CONFIGURE</li>
  	<li>Gdk::Event::MAP</li>
  	<li>Gdk::Event::UNMAP</li>
  	<li>Gdk::Event::PROPERTY_NOTIFY</li>
  	<li>Gdk::Event::SELECTION_CLEAR</li>
  	<li>Gdk::Event::SELECTION_REQUEST</li>
  	<li>Gdk::Event::SELECTION_NOTIFY</li>
  	<li>Gdk::Event::PROXIMITY_IN</li>
  	<li>Gdk::Event::PROXIMITY_OUT</li>
  	<li>Gdk::Event::DRAG_ENTER</li>
  	<li>Gdk::Event::DRAG_LEAVE</li>
  	<li>Gdk::Event::DRAG_MOTION</li>
  	<li>Gdk::Event::DRAG_STATUS</li>
  	<li>Gdk::Event::DROP_START</li>
  	<li>Gdk::Event::DROP_FINISHED</li>
  	<li>Gdk::Event::CLIENT_EVENT</li>
  	<li>Gdk::Event::VISIBILITY_NOTIFY</li>
  	<li>Gdk::Event::NO_EXPOSE</li>
  	<li>Gdk::Event::SCROLL</li>
  	<li>Gdk::Event::WINDOW_STATE</li>
  	<li>Gdk::Event::SETTING</li>
</ul>

<p>So, to connect a callback method to one of these events, we would use something like:</p>
<pre>callback_method ( widget, event, data )</pre>

<p>The value returned from this method indicates whether the event should be propageted further by the GTK event 
handling mechanism. Returning <i>true</i> indicates that the event has been handled, and that it should not propogate
further. Returning <i>false</i> continues the normal event handling. See the section on Advanced Event and Signal Handling
for more details on this propagation process.</p>

<p>For details on the Gdk::Event data types, see the appendix entitled GDK Event Types.</p>

<p>The GDK selection and drag-and-drop APIs also emit a number of events which are reflected in GTK by the signals. See
the Signals on the source widget and Signals on the destination widget for details on the signatures of the callback
methods for these signals:</p>

<ul>
	<li>selection_received</li>
	<li>selection_get</li>
	<li>drag_begin_event</li>
	<li>drag_end_event</li>
	<li>drag_data_delete</li>
	<li>drag_motion</li>
	<li>drag_drop</li>
	<li>drag_motion</li>
	<li>drag_data_get</li>
	<li>drag_data_received</li>
</ul>

<!-- Bottom Nav Section -->
<hr>
<table>
	<tbody><tr>
		<td align="left"><a href="3.2.htm">Prev</a></td>
		<td align="right"><a href="3.4.htm">Next</a></td>
	</tr>
</tbody></table>
</body></html>
