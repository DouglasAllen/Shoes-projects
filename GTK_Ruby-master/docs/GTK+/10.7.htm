<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html><head>


  <title>Hello World in Ruby-GNOME2</title>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <meta name="GENERATOR" content="Quanta Plus">
  <link rel="stylesheet" type="text/css" href="site-style.css">
</head><body>
<h1>10.7 Statusbars</h1>

<p>Statusbars are simple widgets used to display a text message. They keep a 
stack of the messages pushed onto them, so that popping the current message 
will re-display the previous text message.</p>

<p>In order to allow different parts of an application to use the same statusbar
to display messages, the statusbar widget issues Context Identifiers which are used to 
identify different "users". The message on top of the stack is the one displayed, no 
matter what context it is in. Messages are stacked in last-in-first-out order (lifo), not context
identifier order.</p>

<p>A statusbar is created like this:</p>

<pre>Gtk::Statusbar#new</pre>

<p>A new Context Identifier is requested using a call to the following method with a
short textual description of the context:</p>

<pre>Gtk::Statusbar#get_context_id( context_description )</pre>

<p>There are three methods that can operate on statusbars:</p>

<pre>Gtk::Statusbar#push( context_id, text )

Gtk::Statusbar#pop( context_id )

Gtk::Statusbar#remove( context_id, message_id )
</pre>

<p>The first, <i>Gtk::Statusbar#push</i>, is used to add a new message to the statusbar. It returns a
Message Identifier, which can be passed later to the method <i>Gtk::Statusbar#remove</i> to remove the
message with the given Message and Context Identifiers from the statusbar's stack.</p>

<p>The method <i>Gtk::Statusbar#pop</i> removes the message highest in the stack with the given
Context Identifier.</p>

<p>In addition to messages, statusbars may also display a resize grip, which can be dragged 
with the mouse to resize the toplevel window containing the statusbar, similar to dragging 
the window frame. The following methods control the display of the resize grip.</p>

<pre>Gtk::Statusbar#set_has_resize_grip( setting )
Gtk::Statusbar#has_resize_grip=( setting )

Gtk::Statusbar#has_resize_grip?
</pre>

<p>The following example creates a statusbar and two buttons, one for pushing items onto the 
statusbar, and one for popping the last item back off.</p>

<p>INSERT STATUSBAR SCREENSHOT HERE</p>

<pre>CODE
CODE
CODE
CODE
CODE
CODE
</pre>

<hr>
<table>
	<tbody><tr>
		<td align="left"><a href="10.6.htm">Prev</a></td>
		<td align="right"><a href="10.8.htm">Next</a></td>
	</tr>
</tbody></table>
</body></html>
