<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0//EN">
<html><head>


  <title>Getting Started</title>
  <meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
  <meta name="GENERATOR" content="Quanta Plus">
  <link rel="stylesheet" type="text/css" href="site-style.css">
</head><body>
<h1>Chapter 3. Getting Started</h1>

<p>From this point on, I make a few assumptions which are:
	</p><ul>
		<li>You have GTK+ 2.0 compilled and installed on your system.</li>
		<li>You have Ruby version 1.6.7 or greater installed.</li>
		<li>You have the Ruby-GNOME2 bindings compiled, installed, and working properly.</li>
	</ul>


<p>Note to Windows users: I know that Ruby-Gnome2 will run under Cygwin. I am currently testing to see if
it can be compilled nativly on Windows. I know GTK+ 2.0 can, so I assume that Ruby-GNOME2 will (just a guess 
at this juncture though) See my installing GTK+ 2.0 on Windows section in the appendix for instructions.</p>

<p> Onwards to the fun stuff!! To begin our introduction to Ruby-GNOME2, we will start with the simplest 
program possible. This program will create a 200x200 pixel window and has no way of exiting except to be 
killed  by using the shell.</p>

<img src="window.png">
<br><br>
<pre>require 'gtk2'

Gtk.init
window = Gtk::Window.new(Gtk::Window::TOPLEVEL)
window.show
Gtk.main</pre>

<p>Save the program as base.rb. You can then run it by typing in 'ruby base.rb' (without the quotes) at
the command line. You should now see a lovely little window in front of you. You will have to terminate the 
program from the shell.</p>

<p>Lets go ahead and step through the above program.</p><p>

</p><pre>require 'gtk2'</pre>
<p>Loads the Ruby-GNOME2 libraries.</p>

<pre>Gtk.init</pre>
<p>This line must be present in <u>all</u> Ruby-GNOME2 applications. It calls the init method in Gtk, which
in the API level of things, sets up a few things for us such as the default visual and color map and then
proceeds to call gdk_init (in GTK/GDK). This method initalizes the library for use, and sets up the default
signal handlers.</p>

<p> The next two lines of code create and display a window.</p>
<pre>window = Gtk::Window.new(Gtk::Window::TOPLEVEL)
window.show
</pre>

<p>The Gtk::Window::TOPLEVEL argument specifies that we want the window to undergo window manager decoration 
and placement. Rather than create a window of 0x0 pixels in size, a window without children is set to 200x200 
by default so you can still manipulate it. If you forget to add the argument, it defaults to a toplevel window.</p>

<p>The window.show line lets GTK know that we are done setting the attributes of the widget, and that
it can now display it.</p>

<p>The last line enters the GTK main processing loop.</p>
<pre>Gtk.main</pre>
<p>Gtk.main is another call you will see in every GTK application. When control reaches this point, GTK will
sleep, waiting for X events (such as a button or key press), timeouts, or file IO notifications to occur. In
our simple example, however, events are ignored.</p>

<hr>
<table>
	<tbody><tr>
		<td align="left"><a href="2.0.htm">Prev</a></td>
		<td align="right"><a href="3.1.htm">Next</a></td>
	</tr>
</tbody></table>
</body></html>
